{"remainingRequest":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_babel-loader@8.2.3@babel-loader/lib/index.js!/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_eslint-loader@2.2.1@eslint-loader/index.js??ref--13-0!/Users/yanglin/Desktop/test/fingernft/vue-admin/src/store/modules/tagsView.js","dependencies":[{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/src/store/modules/tagsView.js","mtime":1646290558204},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/babel.config.js","mtime":1646290558160},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_babel-loader@8.2.3@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_eslint-loader@2.2.1@eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/yanglin/Desktop/test/fingernft/vue-admin/src/store/modules/tagsView.js"],"names":["i18n","state","visitedViews","cachedViews","mutations","ADD_VISITED_VIEW","view","some","v","path","push","Object","assign","title","meta","ADD_CACHED_VIEW","includes","name","noCache","DEL_VISITED_VIEW","entries","i","splice","DEL_CACHED_VIEW","index","indexOf","DEL_OTHERS_VISITED_VIEWS","filter","affix","DEL_OTHERS_CACHED_VIEWS","slice","DEL_ALL_VISITED_VIEWS","affixTags","tag","DEL_ALL_CACHED_VIEWS","UPDATE_VISITED_VIEW","actions","addView","dispatch","addVisitedView","commit","addCachedView","delView","Promise","resolve","delVisitedView","delCachedView","delOthersViews","delOthersVisitedViews","delOthersCachedViews","delAllViews","delAllVisitedViews","delAllCachedViews","updateVisitedView","namespaced"],"mappings":"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","sourcesContent":["import i18n from \"@/i18n/i18n.js\";\nconst state = {\n  visitedViews: [],\n  cachedViews: []\n}\n\nconst mutations = {\n  ADD_VISITED_VIEW: (state, view) => {\n    if (state.visitedViews.some(v => v.path === view.path)) return\n    state.visitedViews.push(\n      Object.assign({}, view, {\n        title: view.meta.title || 'no-name'\n      })\n    )\n  },\n  ADD_CACHED_VIEW: (state, view) => {\n    if (state.cachedViews.includes(view.name)) return\n    if (!view.meta.noCache) {\n      state.cachedViews.push(view.name)\n    }\n  },\n\n  DEL_VISITED_VIEW: (state, view) => {\n    for (const [i, v] of state.visitedViews.entries()) {\n      if (v.path === view.path) {\n        state.visitedViews.splice(i, 1)\n        break\n      }\n    }\n  },\n  DEL_CACHED_VIEW: (state, view) => {\n    const index = state.cachedViews.indexOf(view.name)\n    index > -1 && state.cachedViews.splice(index, 1)\n  },\n\n  DEL_OTHERS_VISITED_VIEWS: (state, view) => {\n    state.visitedViews = state.visitedViews.filter(v => {\n      return v.meta.affix || v.path === view.path\n    })\n  },\n  DEL_OTHERS_CACHED_VIEWS: (state, view) => {\n    const index = state.cachedViews.indexOf(view.name)\n    if (index > -1) {\n      state.cachedViews = state.cachedViews.slice(index, index + 1)\n    } else {\n      // if index = -1, there is no cached tags\n      state.cachedViews = []\n    }\n  },\n\n  DEL_ALL_VISITED_VIEWS: state => {\n    // keep affix tags\n    const affixTags = state.visitedViews.filter(tag => tag.meta.affix)\n    state.visitedViews = affixTags\n  },\n  DEL_ALL_CACHED_VIEWS: state => {\n    state.cachedViews = []\n  },\n\n  UPDATE_VISITED_VIEW: (state, view) => {\n    for (let v of state.visitedViews) {\n      if (v.path === view.path) {\n        v = Object.assign(v, view)\n        break\n      }\n    }\n  }\n}\n\nconst actions = {\n  addView({ dispatch }, view) {\n    dispatch('addVisitedView', view)\n    dispatch('addCachedView', view)\n  },\n  addVisitedView({ commit }, view) {\n    commit('ADD_VISITED_VIEW', view)\n  },\n  addCachedView({ commit }, view) {\n    commit('ADD_CACHED_VIEW', view)\n  },\n\n  delView({ dispatch, state }, view) {\n    return new Promise(resolve => {\n      dispatch('delVisitedView', view)\n      dispatch('delCachedView', view)\n      resolve({\n        visitedViews: [...state.visitedViews],\n        cachedViews: [...state.cachedViews]\n      })\n    })\n  },\n  delVisitedView({ commit, state }, view) {\n    return new Promise(resolve => {\n      commit('DEL_VISITED_VIEW', view)\n      resolve([...state.visitedViews])\n    })\n  },\n  delCachedView({ commit, state }, view) {\n    return new Promise(resolve => {\n      commit('DEL_CACHED_VIEW', view)\n      resolve([...state.cachedViews])\n    })\n  },\n\n  delOthersViews({ dispatch, state }, view) {\n    return new Promise(resolve => {\n      dispatch('delOthersVisitedViews', view)\n      dispatch('delOthersCachedViews', view)\n      resolve({\n        visitedViews: [...state.visitedViews],\n        cachedViews: [...state.cachedViews]\n      })\n    })\n  },\n  delOthersVisitedViews({ commit, state }, view) {\n    return new Promise(resolve => {\n      commit('DEL_OTHERS_VISITED_VIEWS', view)\n      resolve([...state.visitedViews])\n    })\n  },\n  delOthersCachedViews({ commit, state }, view) {\n    return new Promise(resolve => {\n      commit('DEL_OTHERS_CACHED_VIEWS', view)\n      resolve([...state.cachedViews])\n    })\n  },\n\n  delAllViews({ dispatch, state }, view) {\n    return new Promise(resolve => {\n      dispatch('delAllVisitedViews', view)\n      dispatch('delAllCachedViews', view)\n      resolve({\n        visitedViews: [...state.visitedViews],\n        cachedViews: [...state.cachedViews]\n      })\n    })\n  },\n  delAllVisitedViews({ commit, state }) {\n    return new Promise(resolve => {\n      commit('DEL_ALL_VISITED_VIEWS')\n      resolve([...state.visitedViews])\n    })\n  },\n  delAllCachedViews({ commit, state }) {\n    return new Promise(resolve => {\n      commit('DEL_ALL_CACHED_VIEWS')\n      resolve([...state.cachedViews])\n    })\n  },\n\n  updateVisitedView({ commit }, view) {\n    commit('UPDATE_VISITED_VIEW', view)\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n}\n"]}]}