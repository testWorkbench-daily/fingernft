{"remainingRequest":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!/Users/yanglin/Desktop/test/fingernft/vue-admin/src/views/paytoken/list.vue?vue&type=style&index=0&id=06d7181c&lang=scss&scoped=true&","dependencies":[{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/src/views/paytoken/list.vue","mtime":1646290558227},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_vue-loader@15.9.8@vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_sass-loader@7.3.1@sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmRhdGFGb3JtQ2xhc3N7CiB3aWR0aDogNDAwcHg7CiBtYXJnaW4tbGVmdDo1MHB4Owp9Cg=="},{"version":3,"sources":["list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8QA;AACA;AACA;AACA","file":"list.vue","sourceRoot":"src/views/paytoken","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n\r\n    <!-- 查询和其他操作 -->\r\n    <div class=\"filter-container\">\r\n      <el-button class=\"filter-item\" type=\"primary\" icon=\"el-icon-edit\" @click=\"handleCreate\">{{$t('paytoken.create')}}</el-button>\r\n    </div>\r\n\r\n    <!-- 查询结果 -->\r\n    <el-table v-loading=\"listLoading\" :data=\"list\" :element-loading-text=\"$t('payload.loadingText')\" border fit highlight-current-row>\r\n      <el-table-column align=\"center\" label=\"Id\" prop=\"id\" sortable />\r\n      <el-table-column align=\"center\" :label=\"$t('paytoken.name')\" prop=\"name\" />\r\n      <el-table-column align=\"center\" :label=\"$t('paytoken.symbol')\" prop=\"symbol\" />\r\n      <el-table-column align=\"center\" :label=\"$t('paytoken.decimals')\" prop=\"decimals\" />\r\n      <el-table-column align=\"center\" :label=\"$t('paytoken.type')\" prop=\"type\" >\r\n        <template slot-scope=\"scope\">\r\n          {{ getTokenType(scope.row.type) }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column align=\"center\" :label=\"$t('paytoken.address')\" prop=\"address\" />\r\n      <el-table-column align=\"center\" :label=\"$t('paytoken.default')\" >\r\n        <template slot-scope=\"scope\">\r\n          <el-tag type=\"info\" v-if=\"!scope.row.isDefault\">{{$t('paytoken.no')}}</el-tag>\r\n          <el-tag type=\"success\" v-else>{{$t('paytoken.yes')}}</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column align=\"center\" :label=\"$t('paytoken.operate')\" width=\"300\" class-name=\"small-padding fixed-width\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"primary\" size=\"mini\" @click=\"handleUpdate(scope.row)\">{{$t('paytoken.edit')}}</el-button>\r\n          <el-button type=\"danger\" size=\"mini\" @click=\"handleDelete(scope.row)\" v-if=\"!scope.row.deleted\">{{$t('paytoken.delete')}}</el-button>\r\n        </template>\r\n      </el-table-column>\r\n\r\n    </el-table>\r\n\r\n\r\n    <!-- 添加或修改对话框 -->\r\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\r\n      <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"dataForm\" status-icon label-position=\"left\" label-width=\"120px\" >\r\n\r\n        <el-form-item :label=\"$t('paytoken.name')\" prop=\"name\">\r\n          <el-input v-model=\"dataForm.name\" />\r\n        </el-form-item>\r\n\r\n        <el-form-item :label=\"$t('paytoken.symbol')\" prop=\"symbol\">\r\n          <el-input v-model=\"dataForm.symbol\" />\r\n        </el-form-item>\r\n\r\n        <el-form-item :label=\"$t('paytoken.decimals')\" prop=\"decimals\">\r\n          <el-input v-model=\"dataForm.decimals\" />\r\n        </el-form-item>\r\n\r\n        <el-form-item :label=\"$t('paytoken.type')\" prop=\"type\">\r\n          <el-select v-model=\"dataForm.type\">\r\n            <el-option\r\n              v-for=\"(type, i) in types\"\r\n              :key=\"type.value\"\r\n              :label=\"type.name\"\r\n              :value=\"type.value\"\r\n            >\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item :label=\"$t('paytoken.address')\" prop=\"address\">\r\n          <el-input v-model=\"dataForm.address\" />\r\n        </el-form-item>\r\n\r\n        <el-form-item :label=\"$t('paytoken.default')\" prop=\"isDefault\" v-if=\"dataForm.type != 0\">\r\n          <el-checkbox v-model=\"dataForm.isDefault\" :label=\"$t('paytoken.default')\"></el-checkbox>\r\n        </el-form-item>\r\n\r\n      </el-form>\r\n\r\n      <div slot=\"footer\" class=\"dialog-footer\" v-if=\"dialogStatus!='detail' \">\r\n        <el-button @click=\"dialogFormVisible = false\">{{$t('global.cancel')}}</el-button>\r\n        <el-button v-if=\"dialogStatus=='create'\" type=\"primary\" @click=\"createData\">{{$t('global.confirm')}}</el-button>\r\n        <el-button v-else type=\"primary\" @click=\"updateData\">{{$t('global.confirm')}}</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Pagination from \"@/components/Pagination\"; // Secondary package based on el-pagination\r\n\r\nexport default {\r\n  components: { Pagination },\r\n  data() {\r\n    return {\r\n      list: null,\r\n      listLoading: true,\r\n      types: [\r\n        { value: 0, name: \"ETH\" },\r\n        { value: 1, name: \"ERC20\" },\r\n      ],\r\n      listQuery: {\r\n        page: 1,\r\n        limit: 10,\r\n        username: undefined,\r\n        mobile: undefined,\r\n        sort: \"create_time\",\r\n        order: \"desc\",\r\n      },\r\n      dialogFormVisible: false,\r\n      dialogStatus: \"\",\r\n      dataForm: {},\r\n      rules: {\r\n        name: [ { required: true, message: this.$t('paytoken.emptyName'), trigger: \"blur\" } ],\r\n        symbol: [ { required: true, message: this.$t('paytoken.emptySymbol'), trigger: \"blur\" } ],\r\n        decimals: [ { required: true, message: this.$t('paytoken.emptyDecimals'), trigger: \"blur\" } ],\r\n        address: [ { required: true, message: this.$t('paytoken.emptyAddress'), trigger: \"blur\" } ],\r\n      },\r\n      textMap: {\r\n        update: this.$t('global.edit'),\r\n        detail: this.$t('global.detail'),\r\n        create: this.$t('global.create'),\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.getList();\r\n  },\r\n  methods: {\r\n    getTokenType(type){\r\n      for(var i = 0; i < this.types.length; i++){\r\n        if(type == this.types[i].value){\r\n          return this.types[i].name;\r\n        }\r\n      }\r\n    },\r\n    getList() {\r\n      this.listLoading = true;\r\n      this.$api(\"paytoken.list\", this.listQuery).then((res) => {\r\n        this.list = res.data.list;\r\n        this.listLoading = false;\r\n      }).catch((err) => {\r\n        this.list = [];\r\n        this.listLoading = false;\r\n      });\r\n    },\r\n    handleFilter() {\r\n      this.listQuery.page = 1;\r\n      this.getList();\r\n    },\r\n    resetForm() {\r\n      this.dataForm = {};\r\n    },\r\n    handleCreate() {\r\n      this.resetForm();\r\n      this.dialogStatus = \"create\";\r\n      this.dialogFormVisible = true;\r\n      this.$nextTick(() => {\r\n        this.$refs[\"dataForm\"].clearValidate();\r\n      });\r\n    },\r\n    createData() {\r\n      this.$refs[\"dataForm\"].validate((valid) => {\r\n        if (valid) {\r\n          var data = Object.assign({}, this.dataForm);\r\n          data.isDefault = !data.isDefault ? 0: 1;\r\n          if(data.type == 0) data.isDefault = 0;\r\n\r\n          this.$api('paytoken.create', data)\r\n            .then((res) => {\r\n              if(this.$tool.checkResponse(res)){\r\n                this.dialogFormVisible = false;\r\n                this.$notify.success({\r\n                  title: this.$t('global.success'),\r\n                  message: this.$t('global.createSuccess'),\r\n                });\r\n                this.getList();\r\n              }else{\r\n                this.$notify.error({\r\n                  title: this.$t('global.createFail'),\r\n                  message: res.errmsg,\r\n                });\r\n              }\r\n            })\r\n            .catch((res) => {\r\n              this.$notify.error({\r\n                title: this.$t('global.createFail'),\r\n                message:this.$t('response.' + res.data.errno)\r\n              });\r\n            });\r\n        }\r\n      });\r\n    },\r\n    handleUpdate(row) {\r\n      this.dataForm = Object.assign({}, row);\r\n      this.dataForm.isDefault = this.dataForm.isDefault == 1 ? true : false;\r\n      this.dialogStatus = \"update\";\r\n      this.dialogFormVisible = true;\r\n      this.$nextTick(() => {\r\n        this.$refs[\"dataForm\"].clearValidate();\r\n      });\r\n    },\r\n    updateData() {\r\n      this.$refs[\"dataForm\"].validate((valid) => {\r\n        if (valid) {\r\n          var data = {\r\n            id: this.dataForm.id,\r\n            name: this.dataForm.name,\r\n            symbol: this.dataForm.symbol,\r\n            decimals: this.dataForm.decimals,\r\n            type: this.dataForm.type,\r\n            address: this.dataForm.address,\r\n            isDefault: !this.dataForm.isDefault ? 0 : 1,\r\n          };\r\n          this.$api('paytoken.update', data)\r\n            .then((res) => {\r\n              if(this.$tool.checkResponse(res)){\r\n                this.dialogFormVisible = false;\r\n                this.$notify.success({\r\n                  title: this.$t('global.success'),\r\n                  message: this.$t('global.editSuccess'),\r\n                });\r\n                this.getList();\r\n              }else{\r\n                this.$notify.error({\r\n                  title: this.$t('global.fail'),\r\n                  message: res.errmsg\r\n                });\r\n              }\r\n            })\r\n            .catch((res) => {\r\n              this.$notify.error({\r\n                title: this.$t('global.fail'),\r\n                message:this.$t('response.'+ res.data.errno)\r\n              });\r\n            });\r\n        }\r\n      });\r\n    },\r\n    handleDelete(row) {\r\n      this.$confirm(this.$t('global.deleteTip'), this.$t('global.tip'), {\r\n        confirmButtonText: this.$t('global.confirm'),\r\n        cancelButtonText: this.$t('global.cancel'),\r\n        type: \"warning\",\r\n      })\r\n        .then(() => {\r\n          this.$api('paytoken.delete',{ address: row.address})\r\n            .then((res) => {\r\n              if(this.$tool.checkResponse(res)){\r\n                this.$notify.success({\r\n                  title: this.$t('global.success'),\r\n                  message: this.$t('global.deleteSuccess'),\r\n                });\r\n                this.getList();\r\n              }else{\r\n                this.$notify.error({\r\n                  message: this.$t('global.deleteFail'),\r\n                });\r\n              }\r\n            })\r\n            .catch((res) => {\r\n              this.$notify.error({\r\n                title: this.$t('global.deleteFail'),\r\n                message:this.$t('response.' + res.data.errno)\r\n              });\r\n            });\r\n        })\r\n        .catch(() => {});\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n  .dataFormClass{\r\n   width: 400px;\r\n   margin-left:50px;\r\n  }\r\n</style>\r\n"]}]}