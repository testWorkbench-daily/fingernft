{"remainingRequest":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!/Users/yanglin/Desktop/test/fingernft/vue-admin/src/views/sys/log.vue?vue&type=style&index=0&id=457beed8&scoped=true&lang=css&","dependencies":[{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/src/views/sys/log.vue","mtime":1646290558232},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_vue-loader@15.9.8@vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoud2lkdGgtMjAwcHh7CiAgd2lkdGg6MjAwcHgKfQo="},{"version":3,"sources":["log.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuHA;AACA;AACA","file":"log.vue","sourceRoot":"src/views/sys","sourcesContent":["<template>\n  <div class=\"app-container\">\n\n    <!-- 查询和其他操作 -->\n    <div class=\"filter-container\">\n      <el-input v-model=\"listQuery.name\" clearable class=\"filter-item width-200px\" \n        :placeholder=\"$t('systemManagement.placeholder2')\" />\n      <el-button v-permission=\"['GET /admin/log/list']\" class=\"filter-item\" type=\"primary\"\n        icon=\"el-icon-search\" @click=\"handleFilter\">{{$t('systemManagement.select')}}</el-button>\n    </div>\n\n    <!-- 查询结果 -->\n    <el-table v-loading=\"listLoading\" :data=\"list\" :element-loading-text=\"$t('util.loadingText')\" border fit\n      highlight-current-row>\n      <el-table-column align=\"center\" :label=\"$t('systemManagement.operationsAdministrator')\" prop=\"admin\" />\n      <el-table-column align=\"center\" :label=\"$t('systemManagement.ipAddress')\" prop=\"ip\" />\n      <el-table-column align=\"center\" :label=\"$t('systemManagement.operatingTime')\" prop=\"createTime\" />\n      <el-table-column align=\"center\" :label=\"$t('systemManagement.operatingClass')\" prop=\"type\">\n        <template slot-scope=\"scope\">\n          <!-- <el-tag>{{ scope.row.type | $t(typeFilter[scope.row.type]) }}</el-tag> -->\n          <el-tag>{{ scope.row.type | typeFilter }}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column align=\"center\" :label=\"$t('systemManagement.operationAction')\" prop=\"action\" >\n        <template slot-scope=\"scope\">\n          {{$t('systemManagement.'+scope.row.action)}}\n        </template>\n      </el-table-column>\n      <el-table-column align=\"center\" :label=\"$t('systemManagement.operatingState')\" prop=\"status\">\n        <template slot-scope=\"scope\">\n          <el-tag :type=\"scope.row.status ? 'success' : 'error' \">\n            {{ scope.row.status ? $t('util.success') : $t('util.fail') }}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column align=\"center\" :label=\"$t('systemManagement.operationResult')\" prop=\"result\" />\n      <el-table-column align=\"center\" :label=\"$t('systemManagement.noteInformation')\" prop=\"comment\" />\n\n    </el-table>\n\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\"\n      :limit.sync=\"listQuery.limit\" @pagination=\"getList\" />\n\n  </div>\n</template>\n\n<script>\n//  import { listLog } from '@/api/log'\nimport Pagination from \"@/components/Pagination\";\nimport i18n from \"@/i18n/i18n.js\";\n  const typeMap = {\n        0: 'systemManagement.generalOperation',\n        1: 'systemManagement.safeOperation',\n        2: 'systemManagement.orderOperation',\n        3: 'systemManagement.otherOperations',\n      };\nexport default {\n  name: \"Log\",\n  components: { Pagination },\n  filters: {\n    typeFilter(type) {\n      return i18n.t(typeMap[type]);\n    },\n  },\n  data() {\n    return {\n      list: null,\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        limit: 20,\n        name: undefined,\n        sort: \"create_time\",\n        order: \"desc\",\n      },\n      rules: {\n        name: [\n          { required: true, message: this.$t('systemManagement.rule3'), trigger: \"blur\" },\n        ],\n      },\n    };\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    getList() {\n      this.listLoading = true\n      // listLog(this.listQuery)\n      //   .then(response => {\n      //     this.list = response.data.list\n      //     this.total = response.data.total\n      //     this.listLoading = false\n      //   })\n      //   .catch(() => {\n      //     this.list = []\n      //     this.total = 0\n      //     this.listLoading = false\n      //   })\n        this.$api(\"log.list\", this.listQuery)\n        .then((response) => {\n          this.list = response.data.list;\n          this.total = response.data.total;\n          this.listLoading = false;\n        })\n        .catch(() => {\n          this.list = [];\n          this.total = 0;\n          this.listLoading = false;\n        });\n    },\n    handleFilter() {\n      this.listQuery.page = 1;\n      this.getList();\n    },\n  },\n};\n</script>\n<style scoped>\n.width-200px{\n  width:200px\n}\n</style>"]}]}