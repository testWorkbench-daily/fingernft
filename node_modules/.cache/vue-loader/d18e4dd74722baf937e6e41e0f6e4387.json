{"remainingRequest":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!/Users/yanglin/Desktop/test/fingernft/vue-admin/src/views/sys/role.vue?vue&type=style&index=0&id=3690e6dc&scoped=true&lang=css&","dependencies":[{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/src/views/sys/role.vue","mtime":1646290558233},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_vue-loader@15.9.8@vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoud2lkdGgtMjAwcHh7CiAgd2lkdGg6MjAwcHg7Cn0KLmRhdGFGb3JtQ2xhc3N7CndpZHRoOiA0MDBweDsgbWFyZ2luLWxlZnQ6NTBweDsKfQo="},{"version":3,"sources":["role.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmRA;AACA;AACA;AACA;AACA;AACA","file":"role.vue","sourceRoot":"src/views/sys","sourcesContent":["<template>\n  <div class=\"app-container\">\n\n    <!-- 查询和其他操作 -->\n    <div class=\"filter-container\">\n      <el-input v-model=\"listQuery.name\" clearable class=\"filter-item width-200px\"\n        :placeholder=\"$t('systemManagement.placeholder3')\" />\n      <el-button v-permission=\"['GET /admin/role/list']\" class=\"filter-item\" type=\"primary\"\n        icon=\"el-icon-search\" @click=\"handleFilter\">{{$t('systemManagement.select')}}</el-button>\n      <el-button v-permission=\"['POST /admin/role/create']\" class=\"filter-item\" type=\"primary\"\n        icon=\"el-icon-edit\" @click=\"handleCreate\">{{$t('systemManagement.add')}}</el-button>\n    </div>\n\n    <!-- 查询结果 -->\n    <el-table v-loading=\"listLoading\" :data=\"list\" :element-loading-text=\"$t('util.loadingText')\" border fit\n      highlight-current-row>\n      <el-table-column align=\"center\" :label=\"$t('systemManagement.roleName')\" prop=\"name\" sortable />\n\n      <el-table-column align=\"center\" :label=\"$t('systemManagement.description')\" prop=\"desc\" />\n\n      <el-table-column align=\"center\" :label=\"$t('systemManagement.operation')\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"scope\">\n          <el-button v-permission=\"['POST /admin/role/update']\" type=\"primary\" size=\"mini\"\n            @click=\"handleUpdate(scope.row)\">{{$t('systemManagement.edit')}}</el-button>\n          <el-button v-permission=\"['POST /admin/role/delete']\" type=\"danger\" size=\"mini\"\n            @click=\"handleDelete(scope.row)\">{{$t('systemManagement.delete')}}</el-button>\n          <el-button v-permission=\"['POST /admin/role/permissions']\" type=\"primary\" size=\"mini\"\n            @click=\"handlePermission(scope.row)\">{{$t('systemManagement.authorization')}}</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\"\n      :limit.sync=\"listQuery.limit\" @pagination=\"getList\" />\n\n    <!-- 添加或修改对话框 -->\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n      <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"dataForm\" status-icon label-position=\"left\"\n        label-width=\"100px\" class=\"dataFormClass\">\n        <el-form-item :label=\"$t('systemManagement.roleName')\" prop=\"name\">\n          <el-input v-model=\"dataForm.name\" />\n        </el-form-item>\n        <el-form-item :label=\"$t('systemManagement.description')\" prop=\"desc\">\n          <el-input v-model=\"dataForm.desc\" />\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">{{$t('util.cancel')}}</el-button>\n        <el-button v-if=\"dialogStatus=='create'\" type=\"primary\" @click=\"createData\">{{$t('util.confirm')}}</el-button>\n        <el-button v-else type=\"primary\" @click=\"updateData\">{{$t('util.confirm')}}</el-button>\n      </div>\n    </el-dialog>\n\n    <!-- 权限配置对话框 -->\n    <el-dialog :visible.sync=\"permissionDialogFormVisible\" :title=\"$t('systemManagement.permissionConfiguration')\">\n      <el-tree ref=\"tree\" :data=\"systemPermissions\" :default-checked-keys=\"assignedPermissions\"\n        show-checkbox node-key=\"id\" highlight-current>\n        <span slot-scope=\"{ data }\" class=\"custom-tree-node\">\n          <span>{{ data.label }}</span>\n          <el-tag v-if=\"data.api\" type=\"success\" size=\"mini\">{{ data.api }}</el-tag>\n        </span>\n      </el-tree>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"permissionDialogFormVisible = false\">{{$t('util.cancel')}}</el-button>\n        <el-button type=\"primary\" @click=\"updatePermission\">{{$t('util.confirm')}}</el-button>\n      </div>\n    </el-dialog>\n\n  </div>\n</template>\n\n<script>\nimport Pagination from \"@/components/Pagination\";\nexport default {\n  name: \"Role\",\n  components: { Pagination },\n  data() {\n    return {\n      list: null,\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        limit: 20,\n        name: '',\n        sort: \"create_time\",\n        order: \"desc\",\n      },\n      dataForm: {\n        id: undefined,\n        name: undefined,\n        desc: undefined,\n      },\n      dialogFormVisible: false,\n      dialogStatus: \"\",\n      textMap: {\n        update: this.$t('systemManagement.edit'),\n        create: this.$t('systemManagement.create'),\n      },\n      rules: {\n        name: [\n          { required: true, message: this.$t('systemManagement.rule3'), trigger: \"blur\" },\n        ],\n      },\n      permissionDialogFormVisible: false,\n      systemPermissions: null,\n      assignedPermissions: null,\n      permissionForm: {\n        roleId: undefined,\n        permissions: [],\n      },\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    getList() {\n      this.listLoading = true;\n      this.$api(\"role.list\", this.listQuery)\n        .then((response) => {\n          this.list = response.data.list;\n          this.total = response.data.total;\n          this.listLoading = false;\n        })\n        .catch(() => {\n          this.list = [];\n          this.total = 0;\n          this.listLoading = false;\n        });\n    },\n    handleFilter() {\n      this.listQuery.page = 1;\n      this.getList();\n    },\n    resetForm() {\n      this.dataForm = {\n        id: undefined,\n        name: undefined,\n        desc: undefined,\n      };\n    },\n    handleCreate() {\n      this.resetForm();\n      this.dialogStatus = \"create\";\n      this.dialogFormVisible = true;\n      this.$nextTick(() => {\n        this.$refs[\"dataForm\"].clearValidate();\n      });\n    },\n    createData() {\n      this.$refs[\"dataForm\"].validate((valid) => {\n        if (valid) {\n          this.$api('role.createRole',this.dataForm)\n            .then((response) => {\n              this.list.unshift(response.data.data);\n              this.dialogFormVisible = false;\n              this.$notify.success({\n                title: this.$t('util.success'),\n                message: this.$t('systemManagement.roleAddedSuccessfully'),\n              });\n              this.getList();\n            })\n            .catch((response) => {\n              this.$notify.error({\n                title: this.$t('util.fail'),\n                message: this.$t('response.'+response.data.errno),\n              });\n            });\n        }\n      });\n    },\n    handleUpdate(row) {\n      this.dataForm = Object.assign({}, row);\n      this.dialogStatus = \"update\";\n      this.dialogFormVisible = true;\n      this.$nextTick(() => {\n        this.$refs[\"dataForm\"].clearValidate();\n      });\n    },\n    updateData() {\n      this.$refs[\"dataForm\"].validate((valid) => {\n        if (valid) {\n          this.$api('role.updateRole',this.dataForm)\n            .then((response) => {\n              for (const v of this.list) {\n                if (v.id === this.dataForm.id) {\n                  const index = this.list.indexOf(v);\n                  this.list.splice(index, 1, this.dataForm);\n                  break;\n                }\n              }\n              this.dialogFormVisible = false;\n              if(!response.errno){\n                this.$notify.success({\n                  title: this.$t('util.success'),\n                  message: this.$t('systemManagement.updateAdministratorSucceeded'),\n                });\n              }\n              else{\n                this.$notify.success({\n                  title: this.$t('util.fail'),\n                  message: this.$t('systemManagement.updateAdministratorFailed'),\n                });\n              }\n            })\n            .catch((response) => {\n              this.$notify.error({\n                title: this.$t('util.fail'),\n                message: this.$t('response.'+response.data.errno),\n              });\n            });\n        }\n      });\n    },\n    handleDelete(row) {\n      this.$api('role.deleteRole',{id:row.id})\n        .then((response) => {\n          if(!response.errno){\n            this.$notify.success({\n            title: this.$t('util.success'),\n            message: this.$t('systemManagement.administratorDeletedSuccessfully'),\n            });\n          }\n          else{\n            this.$notify.success({\n            title: this.$t('util.fail'),\n            message: this.$t('systemManagement.failedToDeleteAdministrator'),\n            });\n          }\n          this.getList();\n        })\n        .catch((response) => {\n          this.$notify.error({\n            title: this.$t('util.fail'),\n            message: this.$t('response.'+response.data.errno),\n          });\n        });\n    },\n    handlePermission(row) {\n      this.permissionDialogFormVisible = true;\n      this.permissionForm.roleId = row.id;\n      this.$api(\"role.getPermission\", {roleId: row.id}).then((response) => {\n        this.systemPermissions = response.data.systemPermissions;\n        this.assignedPermissions = response.data.assignedPermissions;\n      })\n    },\n    updatePermission() {\n      this.permissionForm.permissions = this.$refs.tree.getCheckedKeys(true).join(\",\");\n      this.$api(\"role.updatePermission\",this.permissionForm)\n      .then((response) => {\n        this.permissionDialogFormVisible = false;\n        if(!response.errno){\n          this.$notify.success({\n            title: this.$t('util.success'),\n            message: this.$t('systemManagement.authorizationSucceeded'),\n          });\n        }else{\n          this.$notify.success({\n            title: this.$t('util.fail'),\n            message: this.$t('systemManagement.authorizationFailed'),\n          });\n        }\n      })\n      .catch((response) => {\n        this.$notify.error({\n          title: this.$t('util.fail'),\n          message: this.$t('response.'+response.data.errno),\n        });\n      });\n    },\n  },\n};\n</script>\n<style scoped>\n.width-200px{\n  width:200px;\n}\n.dataFormClass{\nwidth: 400px; margin-left:50px;\n}\n</style>\n"]}]}