{"remainingRequest":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!/Users/yanglin/Desktop/test/fingernft/vue-admin/src/views/sys/admin.vue?vue&type=style&index=0&id=bbbefb3a&scoped=true&lang=css&","dependencies":[{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/src/views/sys/admin.vue","mtime":1646290558231},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_vue-loader@15.9.8@vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYXZhdGFyLXVwbG9hZGVyIC5lbC11cGxvYWQgewogIGJvcmRlcjogMXB4IGRhc2hlZCAjZDlkOWQ5OwogIGJvcmRlci1yYWRpdXM6IDZweDsKICBjdXJzb3I6IHBvaW50ZXI7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIG92ZXJmbG93OiBoaWRkZW47Cn0KLmF2YXRhci11cGxvYWRlciAuZWwtdXBsb2FkOmhvdmVyIHsKICBib3JkZXItY29sb3I6ICMyMGEwZmY7Cn0KLmF2YXRhci11cGxvYWRlci1pY29uIHsKICBmb250LXNpemU6IDI4cHg7CiAgY29sb3I6ICM4YzkzOWQ7CiAgd2lkdGg6IDEyMHB4OwogIGhlaWdodDogMTIwcHg7CiAgbGluZS1oZWlnaHQ6IDEyMHB4OwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQouYXZhdGFyIHsKICB3aWR0aDogMTQ1cHg7CiAgaGVpZ2h0OiAxNDVweDsKICBkaXNwbGF5OiBibG9jazsKfQoud2lkdGgtMjAwcHh7CiAgd2lkdGg6MjAwcHg7Cn0KLm1yLTIwcHh7CiAgbWFyZ2luLXJpZ2h0OiAyMHB4Owp9Ci5kYXRhRm9ybUNsYXNzewogIHdpZHRoOiA0MDBweDsgbWFyZ2luLWxlZnQ6NTBweDsKfQo="},{"version":3,"sources":["admin.vue"],"names":[],"mappingsfile":"admin.vue","sourceRoot":"src/views/sys","sourcesContent":["<template>\n  <div class=\"app-container\">\n\n    <!-- 查询和其他操作 -->\n    <div class=\"filter-container\">\n      <el-input v-model=\"listQuery.username\" clearable class=\"filter-item width-200px\" :placeholder=\"$t('systemManagement.placeholder1')\" />\n      <el-button v-permission=\"['GET /admin/admin/list']\" class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\">{{$t('systemManagement.select')}}</el-button>\n      <el-button v-permission=\"['POST /admin/admin/create']\" class=\"filter-item\" type=\"primary\" icon=\"el-icon-edit\" @click=\"handleCreate\">{{$t('systemManagement.add')}}</el-button>\n      <el-button :loading=\"downloadLoading\" class=\"filter-item\" type=\"primary\" icon=\"el-icon-download\" @click=\"handleDownload\">{{$t('systemManagement.export')}}</el-button>\n    </div>\n\n    <!-- 查询结果 -->\n    <el-table v-loading=\"listLoading\" :data=\"list\" :element-loading-text=\"$t('util.loadingText')\" border fit highlight-current-row>\n      <el-table-column align=\"center\" :label=\"$t('systemManagement.administratorID')\" prop=\"id\" sortable />\n\n      <el-table-column align=\"center\" :label=\"$t('systemManagement.administratorName')\" prop=\"username\" />\n\n      <el-table-column align=\"center\" :label=\"$t('systemManagement.administratorAvatar')\" prop=\"avatar\">\n        <template slot-scope=\"scope\" v-if=\"scope.row.avatar\">\n          <media :url=\"scope.row.avatar\" type=\"image\" :isPreview=\"true\"></media>\n        </template>\n      </el-table-column>\n\n      <el-table-column align=\"center\" :label=\"$t('systemManagement.administratorRoles')\" prop=\"roleIds\">\n        <template slot-scope=\"scope\">\n          <el-tag v-for=\"roleId in scope.row.roleIds\" :key=\"roleId\" type=\"primary\" class=\"mr-20px\"> {{ formatRole(roleId,scope) }} </el-tag>\n        </template>\n      </el-table-column>\n\n      <el-table-column align=\"center\" :label=\"$t('systemManagement.operation')\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"scope\">\n          <el-button v-permission=\"['POST /admin/admin/update']\" type=\"primary\" size=\"mini\" @click=\"handleUpdate(scope.row)\">{{$t('systemManagement.edit')}}</el-button>\n          <el-button v-permission=\"['POST /admin/admin/delete']\" type=\"danger\" size=\"mini\" @click=\"handleDelete(scope.row)\">{{$t('systemManagement.delete')}}</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getList\" />\n\n    <!-- 添加或修改对话框 -->\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n      <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"dataForm\" status-icon label-position=\"left\" label-width=\"100px\" class=\"dataFormClass\">\n        <el-form-item :label=\"$t('systemManagement.administratorName')\" prop=\"username\">\n          <el-input v-model=\"dataForm.username\" />\n        </el-form-item>\n        <el-form-item :label=\"$t('systemManagement.administratorPassword')\" prop=\"password\">\n          <el-input v-model=\"dataForm.password\" type=\"password\" auto-complete=\"off\" />\n        </el-form-item>\n        <el-form-item :label=\"$t('systemManagement.administratorAvatar')\" prop=\"avatar\">\n          <el-upload\n              ref=\"upload\"\n              action=\"\"\n              :auto-upload=\"false\"\n              :show-file-list=\"false\"\n              :file-list=\"filelist\"\n              :limit=\"1\"\n              class=\"avatar-uploader\"\n              accept=\"image/jpg, image/jpeg, image/png, image/gif\"\n              :on-change=\"\n                (file) => {\n                  uploadChange(file, 'uploadImage');\n                }\n              \"\n            >\n              <template v-if=\"dataForm.avatar\">\n                <media :url=\"dataForm.avatar\" type=\"image\"></media>\n              </template>\n              <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n            </el-upload>\n        </el-form-item>\n        <el-form-item :label=\"$t('systemManagement.administratorRoles')\" prop=\"roleIds\">\n          <el-select v-model=\"dataForm.roleIds\" multiple :placeholder=\"$t('systemManagement.pleaseSelect')\">\n            <el-option\n              v-for=\"item in roleOptions\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            />\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">{{$t('util.cancel')}}</el-button>\n        <el-button v-if=\"dialogStatus=='create'\" type=\"primary\" @click=\"createData\">{{$t('util.confirm')}}</el-button>\n        <el-button v-else type=\"primary\" @click=\"updateData\">{{$t('util.confirm')}}</el-button>\n      </div>\n    </el-dialog>\n\n  </div>\n</template>\n<script>\nimport { uploadPath } from '@/api/index'\nimport { getToken } from '@/utils/auth'\nimport Pagination from '@/components/Pagination' // Secondary package \nimport Media from \"@/components/Media\";\nexport default {\n  name: 'Admin',\n  components: { Pagination, Media },\n  data() {\n    return {\n      uploadPath,\n      list: null,\n      total: 0,\n      roleOptions: null,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        limit: 20,\n        username: undefined,\n        sort: 'create_time',\n        order: 'desc'\n      },\n      dataForm: {\n        id: undefined,\n        username: undefined,\n        password: undefined,\n        avatar: undefined,\n        roleIds: []\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: this.$t('systemManagement.edit'),\n        create: this.$t('systemManagement.create')\n      },\n      rules: {\n        username: [\n          { required: true, message: this.$t('systemManagement.rule1'), trigger: 'blur' }\n        ],\n        password: [{ required: true, message: this.$t('systemManagement.rule2'), trigger: 'blur' }]\n      },\n      downloadLoading: false,\n      filelist: [],\n      fileImage: \"\"\n    }\n  },\n  created() {\n   this.init();\n  },\n  methods: {\n    init(){\n    this.getList()\n    this.$api('role.roleOptions')\n      .then(response => {\n        this.roleOptions = response.data.list\n      })\n    },\n    formatRole(roleId,scope) {\n      if(this.roleOptions <=0 ) return;\n      for (let i = 0; i < this.roleOptions.length; i++) {\n        if (roleId === this.roleOptions[i].value) {\n          return this.roleOptions[i].label\n        }\n      }\n      return ''\n    },\n    getList() {\n      this.listLoading = true\n      this.$api('admin.listAdmin',this.listQuery)\n        .then(response => {\n          this.list = response.data.list\n          this.total = response.data.total\n          this.listLoading = false\n        })\n        .catch(() => {\n          this.list = []\n          this.total = 0\n          this.listLoading = false\n        })\n    },\n    handleFilter() {\n      this.listQuery.page = 1\n      this.getList()\n    },\n    resetForm() {\n      this.dataForm = {\n        id: undefined,\n        username: undefined,\n        password: undefined,\n        avatar: undefined,\n        roleIds: []\n      }\n      this.fileImage = \"\";\n    },\n    uploadChange(file) {\n      this.filelist = [];\n      this.fileImage = file.raw;\n      var event = event || window.event;\n      var file = event.target.files[0];\n      var reader = new FileReader();\n      var _this = this;\n      reader.onload = function (e) {\n        _this.dataForm.avatar = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    },\n    handleCreate() {\n      this.resetForm()\n      this.dialogStatus = 'create'\n      this.dialogFormVisible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    createData() {\n      this.$refs['dataForm'].validate(valid => {\n        if (valid) {\n          if (this.fileImage) {\n            Promise.all([this.handlerUpload()])\n              .then((res) => {\n                this.createApi(res)\n              })\n              .catch((err) => {\n                this.failCallback();\n              });\n          } else {\n            this.createApi()\n          }\n        }\n      })\n    },\n    createApi(file) {\n      let {avatar} = this.dataForm;\n      avatar = file ? file[0].url : \"\";\n      this.dataForm.avatar = avatar;\nthis.$api('admin.createAdmin',this.dataForm)\n            .then(response => {\n              this.list.unshift(response.data)\n              this.dialogFormVisible = false\n              if(!response.errno){\n              this.$notify.success({\n                title: this.$t('util.success'),\n                message:this.$t('systemManagement.addingAdministratorSucceeded')\n              })\n              }\n              else{\n                this.$notify.error({\n                title: this.$t('util.fail'),\n                message: this.$t('response.'+response.data.errno)\n              })\n              }\n              this.init();\n            })\n            .catch(response => {\n              this.$notify.error({\n                title: this.$t('util.fail'),\n                message: this.$t('response.'+response.data.errno)\n              })\n            })\n    },\n    handlerUpload() {\n      return new Promise((resolve, reject) => {\n        let formData = new FormData();\n        formData.append(\"file\", this.fileImage);\n        this.$api(\"storage.create\", formData)\n          .then((res) => {\n            if (this.$tool.checkResponse(res)) {\n              resolve(res.data);\n            } else {\n              reject(res);\n            }\n          })\n          .catch((err) => {\n            reject(err);\n          });\n      });\n    },\n    uploadChange(file) {\n      this.filelist = [];\n      this.fileImage = file.raw;\n      var event = event || window.event;\n      var file = event.target.files[0];\n      var reader = new FileReader();\n      var _this = this;\n      reader.onload = function (e) {\n        _this.dataForm.avatar = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    },\n    handleUpdate(row) {\n      this.fileImage = \"\";\n      this.dataForm = Object.assign({}, row);\n      this.dialogStatus = 'update'\n      this.dialogFormVisible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    failCallback(err) {\n      this.apiLoading = false;\n      this.$notify.error({\n        title: this.$t(\"blind.fail\"),\n        message: err\n          ? this.$t(\"response.\" + err.data ? err.data.errno: \"\")\n          : this.$t(\"blind.messageFail\"),\n      });\n      if (this.dialogStatus == \"del\" || this.dialogStatus == \"sync\") {\n        this.handlerCancel();\n      }\n    },\n    updateData() {\n      this.$refs['dataForm'].validate(valid => {\n        if (valid) {\n          if (this.fileImage) {\n            Promise.all([this.handlerUpload()])\n              .then((res) => {\n                console.log('update')\n                this.editApi(res)\n              })\n              .catch((err) => {\n                this.failCallback();\n              });\n          } else {\n            this.editApi()\n          }\n          \n        }\n      })\n    },\n    editApi(file) {\n      console.log(file)\n      let { avatar } = this.dataForm;\n      avatar = file ? file[0].url : avatar;\n      this.dataForm.avatar = avatar;\n      this.$api('admin.updateAdmin',this.dataForm)\n            .then((response) => {\n              // for (const v of this.list) {\n              //   if (v.id === this.dataForm.id) {\n              //     const index = this.list.indexOf(v)\n              //     this.list.splice(index, 1, this.dataForm)\n              //     break\n              //   }\n              // }\n              console.log(response)\n              if(!response.errno){\n                this.getList()\n                this.$notify.success({\n                  title: this.$t('util.success'),\n                  message: this.$t('systemManagement.updateAdministratorSucceeded')\n                })\n                this.dialogFormVisible = false\n              }\n              else{\n                this.$notify.error({\n                title: this.$t('util.fail'),\n                message: this.$t('response.'+response.data.errno)\n              })\n              }\n            })\n            .catch(response => {\n              this.$notify.error({\n                title: this.$t('util.fail'),\n                message: this.$t('response.'+response.data.errno)\n              })\n            })\n    },\n    handleDelete(row) {\n      this.$api('admin.deleteAdmin',row)\n        .then(response => {\n            if(!response.errno){\n                this.$notify.success({\n                  title: this.$t('util.success'),\n                  message: this.$t('systemManagement.updateAdministratorSucceeded')\n                })\n              }\n              else{\n                this.$notify.error({\n                title: this.$t('util.fail'),\n                message: this.$t('response.'+response.data.errno)\n              })\n              }\n          this.getList()\n        })\n        .catch(response => {\n          this.$notify.error({\n            title: this.$t('util.fail'),\n            message: this.$t('response.'+response.data.errno)\n          })\n        })\n    },\n    handleDownload() {\n      this.downloadLoading = true\n      import('@/vendor/Export2Excel').then(excel => {\n        const tHeader = [this.$t('systemManagement.administratorID'),this.$t('systemManagement.administratorName'), this.$t('systemManagement.administratorAvatar')]\n        const filterVal = ['id', 'username', 'avatar']\n        excel.export_json_to_excel2(\n          tHeader,\n          this.list,\n          filterVal,\n          this.$t('systemManagement.administratorInformation')\n        )\n        this.downloadLoading = false\n      })\n    }\n  }\n}\n</script>\n<style scoped>\n.avatar-uploader .el-upload {\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n}\n.avatar-uploader .el-upload:hover {\n  border-color: #20a0ff;\n}\n.avatar-uploader-icon {\n  font-size: 28px;\n  color: #8c939d;\n  width: 120px;\n  height: 120px;\n  line-height: 120px;\n  text-align: center;\n}\n.avatar {\n  width: 145px;\n  height: 145px;\n  display: block;\n}\n.width-200px{\n  width:200px;\n}\n.mr-20px{\n  margin-right: 20px;\n}\n.dataFormClass{\n  width: 400px; margin-left:50px;\n}\n</style>\n\n\n"]}]}