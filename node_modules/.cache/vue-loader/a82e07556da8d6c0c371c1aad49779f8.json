{"remainingRequest":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!/Users/yanglin/Desktop/test/fingernft/vue-admin/src/components/Media.vue?vue&type=style&index=0&id=6e5ac9e4&lang=scss&scoped=true&","dependencies":[{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/src/components/Media.vue","mtime":1646290558183},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_vue-loader@15.9.8@vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_sass-loader@7.3.1@sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKdGFibGUgYXVkaW8gewogIHdpZHRoOiA4MCU7Cn0KLmlsLW1lZGlhOmhvdmVyIHsKICBjdXJzb3I6IHBvaW50ZXI7Cn0KLnZpZGVvLXdyYXB7CiAgcG9zaXRpb246cmVsYXRpdmUKfQoudmlkZW8tYnRuewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0b3A6IDA7CiAgbGVmdDogMDsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7Cn0K"},{"version":3,"sources":["Media.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Media.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"il-media\">\n    <template v-if=\"mediaType === 'image'\">\n      <el-image\n        style=\"width: 100px; height: 100px\"\n        :src=\"mediaUrl\"\n        :preview-src-list=\"srcList\"\n      >\n      </el-image>\n    </template>\n    <template v-else>\n      <audio v-if=\"mediaType === 'audio'\" :src=\"mediaUrl\" controls></audio>\n      <div class=\"video-wrap\" v-if=\"mediaType === 'video'\">\n        <video\n        :src=\"mediaUrl\"\n        :width=\"isPreview ? '80%' : '200px'\"\n        :controls=\"isPreview ? 'controls' : ''\"\n      ></video>\n      <div @click=\"dialogVisible=true\" v-if=\"isPreview\" class=\"video-btn\"></div>\n      </div>\n    </template>\n    <el-dialog :visible.sync=\"dialogVisible\" class=\"media-dialog\">\n        <video\n        :src=\"mediaUrl\"\n        width=\"100%\"\n        controls\n      ></video>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nexport default {\n  name: \"Media\",\n  data() {\n    return {\n      dialogVisible: false,\n      typeData: {\n        image: [\".jpeg\", \".jpg\", \".png\", \".gif\"],\n        audio: [\".mp3\", \".wav\", \".oga\"],\n        video: [\".webm\", \".mp4\", \".m4v\", \".ogg\", \".ogv\", \".mov\"],\n      },\n    };\n  },\n  props: {\n    url: String,\n    type: String,\n    // 可选：是否预览\n    isPreview: {\n      default: false,\n    },\n  },\n  computed: {\n    ...mapState({ config: (state) => state.user.config }),\n    mediaUrl() {\n      if (this.url.startsWith(\"ipfs\", 0)) {\n        return this.url.replace(\"ipfs://\", this.config.ipfsUrl);\n      } else {\n        return this.url;\n      }\n    },\n    mediaType() {\n      if (this.type) {\n        if (this.type === \"image\") {\n          return \"image\";\n        } else {\n          if (this.type.split(\"/\")[0] === \"audio\") {\n            return \"audio\";\n          }\n          if (this.type.split(\"/\")[0] === \"video\") {\n            return \"video\";\n          }\n        }\n      } else {\n        for (let key in this.typeData) {\n          for(let item of this.typeData[key]) {\n            if(this.url.endsWith(item)) {\n              return key\n            }\n          }\n        }\n        return\n      }\n    },\n    srcList() {\n      return this.isPreview ? [this.mediaUrl] : [];\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\ntable audio {\n  width: 80%;\n}\n.il-media:hover {\n  cursor: pointer;\n}\n.video-wrap{\n  position:relative\n}\n.video-btn{\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n</style>\n\n"]}]}