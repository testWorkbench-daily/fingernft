{"remainingRequest":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!/Users/yanglin/Desktop/test/fingernft/vue-admin/src/views/category/list.vue?vue&type=style&index=0&id=bfc0c836&lang=scss&scoped=true&","dependencies":[{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/src/views/category/list.vue","mtime":1646290558211},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_vue-loader@15.9.8@vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_sass-loader@7.3.1@sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanglin/Desktop/test/fingernft/vue-admin/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZGF0YUZvcm1DbGFzc3sKIHdpZHRoOiA0MDBweDsKIG1hcmdpbi1sZWZ0OjUwcHg7Cn0K"},{"version":3,"sources":["list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiQA;AACA;AACA;AACA","file":"list.vue","sourceRoot":"src/views/category","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n\r\n    <!-- 查询和其他操作 -->\r\n    <div class=\"filter-container\">\r\n      <el-button class=\"filter-item\" type=\"primary\" icon=\"el-icon-edit\" @click=\"handleCreate\">{{$t('sortManagement.create')}}</el-button>\r\n    </div>\r\n\r\n    <!-- 查询结果 -->\r\n    <el-table v-loading=\"listLoading\" :data=\"list\" :element-loading-text=\"$t('sortManagement.loadingText')\" border fit highlight-current-row>\r\n      <el-table-column align=\"center\" :label=\"$t('sortManagement.categoryId')\" prop=\"id\" sortable />\r\n\r\n      <el-table-column align=\"center\" :label=\"$t('sortManagement.categoryName')\" prop=\"name\" />\r\n\r\n      <el-table-column align=\"center\" :label=\"$t('sortManagement.weight')\" prop=\"order\" />\r\n\r\n      <el-table-column align=\"center\" :label=\"$t('sortManagement.state')\" prop=\"deleted\">\r\n        <template slot-scope=\"scope\">\r\n          <el-tag type=\"success\" v-if=\"!scope.row.deleted\">{{$t('sortManagement.normal')}}</el-tag>\r\n          <el-tag type=\"danger\" v-else>{{$t('sortManagement.disabled')}}</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column align=\"center\" :label=\"$t('sortManagement.operation')\" width=\"300\" class-name=\"small-padding fixed-width\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"primary\" size=\"mini\" @click=\"handleUpdate(scope.row)\">{{$t('sortManagement.edit')}}</el-button>\r\n          <el-button type=\"danger\" size=\"mini\" @click=\"handleDisable(scope.row)\" v-if=\"!scope.row.deleted\">{{$t('sortManagement.disable')}}</el-button>\r\n          <el-button type=\"success\" size=\"mini\" @click=\"handleEnable(scope.row)\" v-else>{{$t('sortManagement.enable')}}</el-button>\r\n        </template>\r\n      </el-table-column>\r\n\r\n    </el-table>\r\n\r\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getList\" />\r\n\r\n    <!-- 添加或修改对话框 -->\r\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\r\n      <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"dataForm\" status-icon label-position=\"left\" label-width=\"120px\" >\r\n\r\n        <el-form-item :label=\"$t('sortManagement.categoryId')\" prop=\"id\" v-if=\"dialogStatus=='detail'\">\r\n          <span>{{dataForm.id}}</span>\r\n        </el-form-item>\r\n\r\n        <el-form-item :label=\"$t('sortManagement.categoryName')\" prop=\"name\" v-if=\"dialogStatus=='detail'\">\r\n          <span>{{dataForm.name}}</span>\r\n        </el-form-item>\r\n\r\n        <el-form-item :label=\"$t('sortManagement.weight')\" prop=\"order\" v-if=\"dialogStatus=='detail'\">\r\n          <span>{{dataForm.order}}</span>\r\n        </el-form-item>\r\n\r\n        <el-form-item :label=\"$t('sortManagement.categoryName')\" prop=\"name\" v-if=\"dialogStatus!='detail'\">\r\n          <el-input v-model=\"dataForm.name\" />\r\n        </el-form-item>\r\n\r\n        <el-form-item :label=\"$t('sortManagement.weight')\" prop=\"order\" v-if=\"dialogStatus!='detail'\">\r\n          <el-input v-model=\"dataForm.order\" />\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <div slot=\"footer\" class=\"dialog-footer\" v-if=\"dialogStatus!='detail' \">\r\n        <el-button @click=\"dialogFormVisible = false\">{{$t('sortManagement.cancel')}}</el-button>\r\n        <el-button v-if=\"dialogStatus=='create'\" type=\"primary\" @click=\"createData\">{{$t('sortManagement.confirm')}}</el-button>\r\n        <el-button v-else type=\"primary\" @click=\"updateData\">{{$t('sortManagement.confirm')}}</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Pagination from \"@/components/Pagination\"; // Secondary package based on el-pagination\r\n\r\nexport default {\r\n  components: { Pagination },\r\n  data() {\r\n    return {\r\n      list: null,\r\n      total: 0,\r\n      listLoading: true,\r\n      listQuery: {\r\n        page: 1,\r\n        limit: 10,\r\n        username: undefined,\r\n        mobile: undefined,\r\n        sort: \"create_time\",\r\n        order: \"desc\",\r\n      },\r\n      dialogFormVisible: false,\r\n      dialogStatus: \"\",\r\n      dataForm: {\r\n        id: undefined,\r\n        sort: undefined,\r\n        name: undefined,\r\n      },\r\n      rules: {\r\n        name: [\r\n          { required: true, message: this.$t('sortManagement.message1'), trigger: \"blur\" },\r\n        ],\r\n        sort: [{ required: true, message: this.$t('sortManagement.message2'), trigger: \"blur\" }],\r\n      },\r\n      textMap: {\r\n        update: this.$t('sortManagement.edit'),\r\n        detail: this.$t('sortManagement.detail'),\r\n        create: this.$t('sortManagement.create'),\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.getList();\r\n  },\r\n  methods: {\r\n    getList() {\r\n      this.listLoading = true;\r\n      this.$api(\"category.list\", this.listQuery).then((res) => {\r\n       this.list = res.data.list;\r\n          this.total = res.data.total;\r\n          this.listLoading = false;\r\n      })\r\n      .catch((err) => {\r\n          this.list = [];\r\n          this.total = 0;\r\n          this.listLoading = false;\r\n        });\r\n    },\r\n    handleFilter() {\r\n      this.listQuery.page = 1;\r\n      this.getList();\r\n    },\r\n    resetForm() {\r\n      this.dataForm = {\r\n        sort: undefined,\r\n        name: undefined,\r\n      };\r\n    },\r\n    handleCreate() {\r\n      this.resetForm();\r\n      this.dialogStatus = \"create\";\r\n      this.dialogFormVisible = true;\r\n      this.$nextTick(() => {\r\n        this.$refs[\"dataForm\"].clearValidate();\r\n      });\r\n    },\r\n    createData() {\r\n      this.$refs[\"dataForm\"].validate((valid) => {\r\n        if (valid) {\r\n          this.$api('category.createCategory',this.dataForm)\r\n            .then((response) => {\r\n              this.list.unshift(response.data);\r\n              this.dialogFormVisible = false;\r\n              this.$notify.success({\r\n                title: this.$t('sortManagement.success'),\r\n                message: this.$t('sortManagement.createSuccess'),\r\n              });\r\n            })\r\n            .catch((response) => {\r\n              this.$notify.error({\r\n                title: this.$t('sortManagement.fail'),\r\n                message:this.$t('response.'+response.data.errno)\r\n              });\r\n            });\r\n        }\r\n      });\r\n    },\r\n    handleUpdate(row) {\r\n      this.dataForm = Object.assign({}, row);\r\n      this.dialogStatus = \"update\";\r\n      this.dialogFormVisible = true;\r\n      this.$nextTick(() => {\r\n        this.$refs[\"dataForm\"].clearValidate();\r\n      });\r\n    },\r\n    updateData() {\r\n      this.$refs[\"dataForm\"].validate((valid) => {\r\n        if (valid) {\r\n          this.$api('category.updateCategory',{ id: this.dataForm.id, name: this.dataForm.name })\r\n            .then(() => {\r\n              for (const v of this.list) {\r\n                if (v.id === this.dataForm.id) {\r\n                  const index = this.list.indexOf(v);\r\n                  this.list.splice(index, 1, this.dataForm);\r\n                  break;\r\n                }\r\n              }\r\n              this.dialogFormVisible = false;\r\n              this.$notify.success({\r\n                title: this.$t('sortManagement.success'),\r\n                message: this.$t('sortManagement.editSuccess'),\r\n              });\r\n            })\r\n            .catch((response) => {\r\n              this.$notify.error({\r\n                title: this.$t('sortManagement.fail'),\r\n                message:this.$t('response.'+response.data.errno)\r\n              });\r\n            });\r\n        }\r\n      });\r\n    },\r\n    handleDisable(row) {\r\n      this.$confirm(this.$t('sortManagement.tipContent'), this.$t('sortManagement.tip'), {\r\n        confirmButtonText: this.$t('sortManagement.confirm'),\r\n        cancelButtonText: this.$t('sortManagement.cancel'),\r\n        type: \"warning\",\r\n      })\r\n        .then(() => {\r\n          this.$api('category.disableCategory',{ id: row.id })\r\n            .then((response) => {\r\n              if (response.errno == -1) {\r\n                this.$notify.error({\r\n                  message: this.$t('sortManagement.cantDisabled'),\r\n                });\r\n              } else {\r\n                this.$notify.success({\r\n                  title: this.$t('sortManagement.success'),\r\n                  message: this.$t('sortManagement.successfullyDisabled'),\r\n                });\r\n                this.getList();\r\n              }\r\n            })\r\n            .catch((response) => {\r\n              this.$notify.error({\r\n                title: this.$t('sortManagement.disablingFailed'),\r\n                message:this.$t('response.'+response.data.errno)\r\n              });\r\n            });\r\n        })\r\n        .catch(() => {});\r\n    },\r\n    handleEnable(row) {\r\n      this.$confirm(this.$t('sortManagement.operationEnabled'), this.$t('sortManagement.tip'), {\r\n        confirmButtonText: this.$t('sortManagement.confirm'),\r\n        cancelButtonText: this.$t('sortManagement.cancel'),\r\n        type: \"warning\",\r\n      })\r\n        .then(() => {\r\n          this.$api('category.enableCategory',{ id: row.id })\r\n            .then((response) => {\r\n              this.$notify.success({\r\n                title: this.$t('sortManagement.success'),\r\n                message: this.$t('sortManagement.enabledSuccessfully'),\r\n              });\r\n              this.getList();\r\n            })\r\n            .catch((response) => {\r\n              this.$notify.error({\r\n                title: this.$t('sortManagement.activationFailed'),\r\n                message:this.$t('response.'+response.data.errno)\r\n              });\r\n            });\r\n        })\r\n        .catch(() => {});\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n  .dataFormClass{\r\n   width: 400px;\r\n   margin-left:50px;\r\n  }\r\n</style>\r\n"]}]}